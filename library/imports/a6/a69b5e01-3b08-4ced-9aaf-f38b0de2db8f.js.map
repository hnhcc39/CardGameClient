{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,IAAI,mBAAmB,GAAG,CAAC,CAAC;AAC5B,IAAI,oBAAoB,GAAG,CAAC,CAAC;AAC7B,IAAI,0BAA0B,GAAG,CAAC,CAAC;;AAEnC,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;;;;;;;;;KAUX;;;AAGD,UAAM,EAAE,kBAAY,EAEnB;;AAED,WAAO,EAAE;AACL,gBAAQ,EAAE,IAAI;;AAEd,YAAI,EAAE,cAAS,IAAI,EAAE;AACjB,cAAE,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;AAC3B,gBAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;;;AAGrB,gBAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACxE,gBAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAC3E,gBAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SAEtE;;;AAGD,kBAAU,EAAE,sBAAW;AACnB,gBAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;SAC9B;;;AAGD,oBAAY,EAAE,sBAAS,KAAK,EAAE;AAC1B,gBAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACxC,cAAE,CAAC,GAAG,CAAC,kCAAkC,EAAE,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;;;;;SAOrE;;;AAGD,gBAAQ,EAAE,kBAAS,KAAK,EAAE;AACtB,gBAAG,KAAK,CAAC,KAAK,IAAI,mBAAmB,EACrC;AACI,oBAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC1C,kBAAE,CAAC,GAAG,CAAC,eAAe,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;aACxC,MACI,IAAG,KAAK,CAAC,KAAK,IAAI,0BAA0B,EACjD;AACI,4BAAY,CAAC,WAAW,CAAC,CAAC;aAC7B,MACI,IAAG,KAAK,CAAC,KAAK,IAAI,oBAAoB,EAC3C;AACI,4BAAY,CAAC,YAAY,CAAC,CAAC;aAC9B,MAED;AACI,4BAAY,CAAC,WAAW,CAAC,CAAC;aAC7B;SACJ;;KAEJ;;CAOJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "var LOGIN_ERROR_NOERROR = 0;\r\nvar LOGIN_ERROR_NOTFOUND = 1;\r\nvar LOGIN_ERROR_PASSWORD_ERROR = 2;\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n\r\n    },\r\n    \r\n    statics: {\r\n        gameConn: null, //网络连接\r\n        \r\n        init: function(conn) {\r\n            cc.log('EventProcess 初始化');\r\n            this.gameConn = conn;\r\n            \r\n            //注册消息处理函数\r\n            this.gameConn.registerHandler('disconnect', this.disconnect.bind(this));\r\n            this.gameConn.registerHandler(WC_CONNECTED, this[WC_CONNECTED].bind(this));\r\n            this.gameConn.registerHandler(WC_LOGIN, this[WC_LOGIN].bind(this));\r\n            \r\n        },\r\n        \r\n        //服务器断开连接\r\n        disconnect: function() {\r\n            this.gameConn.disconnect();\r\n        },\r\n        \r\n        //连接响应\r\n        WC_CONNECTED: function(param) {\r\n            this.gameConn.connectSuccess(param.idx);\r\n            cc.log('收到服务器连接响应，clientid: %d, name: %s', param.idx, param.name);\r\n            //var gameConn = this.gameConn;\r\n            //var socket = gameConn.socket;\r\n            \r\n            //gameConn.clientId = idx;\r\n            \r\n           \r\n        },\r\n        \r\n        //登录响应\r\n        WC_LOGIN: function(param) {\r\n            if(param.error == LOGIN_ERROR_NOERROR)\r\n            {\r\n                this.gameConn.loginSuccess(param.account);\r\n                cc.log(\"登录成功,error:%d\", param.error);\r\n            }\r\n            else if(param.error == LOGIN_ERROR_PASSWORD_ERROR)\r\n            {\r\n                showTipLabel('登录失败，密码错误');\r\n            }\r\n            else if(param.error == LOGIN_ERROR_NOTFOUND)\r\n            {\r\n                showTipLabel('登录失败，账号不存在');\r\n            }\r\n            else\r\n            {\r\n                showTipLabel('登录失败，未知错误');\r\n            }\r\n        },\r\n        \r\n    },\r\n    \r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}