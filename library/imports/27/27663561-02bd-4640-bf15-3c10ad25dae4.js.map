{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": ";AACA,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;AACtB,MAAM,CAAC,gBAAgB,GAAG,CAAC,CAAC;AAC5B,MAAM,CAAC,eAAe,GAAG,CAAC,CAAC;AAC3B,MAAM,CAAC,cAAc,GAAG,CAAC,CAAC;;;;;AAK1B,MAAM,CAAC,YAAY,GAAG,cAAc,CAAC;AACrC,MAAM,CAAC,gBAAgB,GAAG,kBAAkB,CAAC;AAC7C,MAAM,CAAC,iBAAiB,GAAG,mBAAmB,CAAC;AAC/C,MAAM,CAAC,oBAAoB,GAAG,sBAAsB,CAAC;AACrD,MAAM,CAAC,qBAAqB,GAAG,uBAAuB,CAAC;;;AAGvD,MAAM,CAAC,mBAAmB,GAAG,qBAAqB,CAAC;AACnD,MAAM,CAAC,oBAAoB,GAAG,sBAAsB,CAAC;AACrD,MAAM,CAAC,WAAW,GAAG,aAAa,CAAC;;;AAGnC,MAAM,CAAC,aAAa,GAAG,eAAe,CAAC;AACvC,MAAM,CAAC,mBAAmB,GAAG,qBAAqB,CAAC;AACnD,MAAM,CAAC,gBAAgB,GAAG,kBAAkB,CAAC;;AAE7C,MAAM,CAAC,YAAY,GAAG,SAAS,YAAY,CAAC,GAAG,EAAE,KAAK,EACtD;;AAEI,QAAI,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;AACzB,QAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;AACxC,QAAG,KAAK,EACJ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;;AAEvB,SAAK,CAAC,MAAM,GAAG,GAAG,CAAC;AACnB,QAAI,CAAC,WAAW,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;AACtB,QAAI,KAAK,GAAG,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;AAC5D,SAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;;;AAGrB,QAAI,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC5B,QAAI,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC,UAAS,IAAI,EAAE;AACtC,UAAE,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AAClC,YAAI,CAAC,OAAO,EAAE,CAAC;KAClB,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;;AAEd,QAAI,GAAG,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AACzC,QAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;CACvB,CAAA",
  "file": "unknown",
  "sourcesContent": [
    "//回合阶段\r\nwindow.PHASE_NULL = 0;\r\nwindow.PHASE_BEGIN_TURN = 1;\r\nwindow.PHASE_MAIN_TURN = 2;\r\nwindow.PHASE_END_TURN = 3;\r\n\r\n//客户端与服务端通信函数\r\n\r\n//登录\r\nwindow.WC_CONNECTED = 'WC_CONNECTED';           //服务端向客户端发送连接响应\r\nwindow.CW_LOGIN_REQUEST = 'CW_LOGIN_REQUEST';   //客户端向服务端发送登录请求\r\nwindow.WC_LOGIN_RESPONSE = 'WC_LOGIN_RESPONSE'; //服务端向客户端发送登录响应\r\nwindow.CW_ENTERROOM_REQUEST = 'CW_ENTERROOM_REQUEST';   //客户端向服务端发送进入房间请求\r\nwindow.WC_ENTERROOM_RESPONSE = 'WC_ENTERROOM_RESPONSE'; //服务端向客户端发送进入房间响应\r\n\r\n//聊天\r\nwindow.CW_CHAT_ADD_REQUEST = 'CW_CHAT_ADD_REQUEST';     //客户端向服务端发送聊天信息请求\r\nwindow.WC_CHAT_ADD_RESPONSE = 'WC_CHAT_ADD_RESPONSE';   //服务端向客户端发送聊天信息响应\r\nwindow.WC_CHAT_ADD = 'WC_CHAT_ADD';                     //服务端向客户端发送聊天信息\r\n\r\n//Player\r\nwindow.WC_PLAYER_ADD = 'WC_PLAYER_ADD';   //服务端向客户端发送PLAYER添加(自己)\r\nwindow.WC_PLAYER_ADD_OTHER = 'WC_PLAYER_ADD_OTHER';   //服务端向客户端发送PLAYER添加(别人)\r\nwindow.WC_PLAYER_UPDATE = 'WC_PLAYER_UPDATE';   //服务端向客户端发送PLAYER更新\r\n\r\nwindow.showTipLabel = function showTipLabel(str, color) \r\n{\r\n    //文字标签创建\r\n    var node = new cc.Node();\r\n    var label = node.addComponent(cc.Label);\r\n    if(color)\r\n        node.color = color;\r\n        \r\n    label.string = str;\r\n    node.setPosition(0,0);\r\n    var scene = cc.director.getScene().getChildByName('Canvas');\r\n    scene.addChild(node);\r\n    \r\n    //2秒后消失\r\n    var fadeout = cc.fadeOut(2);\r\n    var callFunc = cc.callFunc(function(node) {\r\n        cc.log('node is what:%s', node.x);\r\n        node.destroy();\r\n    }, node, null)\r\n    \r\n    var seq = cc.sequence(fadeout, callFunc);\r\n    node.runAction(seq);\r\n}\r\n"
  ]
}