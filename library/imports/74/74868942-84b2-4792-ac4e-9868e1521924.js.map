{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "//处理对战流程的关键类\r\n\r\nconst Player = require('player');\r\nconst ChatWnd = require('ChatWnd');\r\nconst PlayerSprite = require('PlayerSprite');\r\nvar GameConn = require('./NetWork/GameConn');\r\n//var EventProcess = require('./Network/EventProcess');\r\n\r\n//对战状态\r\nvar DUEL_STATE_REST = 0;\r\nvar DUEL_STATE_PLAYING = 1;\r\n\r\n//分组\r\nvar TEAM_COLOR_NONE = -1;\r\nvar TEAM_COLOR_RED = 1;\r\nvar TEAM_COLOR_BLUE = 2;\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        \r\n        playerVec: [],\r\n        state : DUEL_STATE_REST,\r\n        \r\n        turn: 0,            //每个玩家一回合加一次\r\n        round: 0,           //每个玩家都行动过一回合加一次\r\n\r\n        //-----------------------控件-------------------------------------------\r\n        cardPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        \r\n        playerSpriteVec: [PlayerSprite],    //玩家控件\r\n\r\n        //聊天窗口脚本\r\n        chatWnd: {\r\n            default: null,\r\n            type: ChatWnd\r\n        },\r\n    },\r\n    \r\n    setInputControl: function() {\r\n        var self = this;\r\n        this.node.on('touchstart', function(event) {\r\n            cc.log('1231312321313213123');\r\n            cc.log(event.getLocationX());\r\n        }, this);\r\n\r\n    },\r\n    \r\n    addPlayer: function(param) {\r\n        var idx = param;\r\n        var player = this.playerVec[idx];\r\n        //玩家数据已存在\r\n        if(player)\r\n        {\r\n            cc.log('WC_PLAYER_ADD error! player(%d) is already exited.', idx);\r\n            return;\r\n        }\r\n        \r\n        //创建玩家并加入玩家数组\r\n        this.createPlayer(param);\r\n    },\r\n    \r\n    createPlayer: function(param) {\r\n        var player = new Player();\r\n        player.init(this);\r\n        player.unPackDataAll(param);\r\n        this.playerVec[param.idx] = player;\r\n    },\r\n    \r\n    getPlayer: function(idx) {\r\n        return this.playerVec[idx];    \r\n    },\r\n    \r\n    getPlayerSprite: function(idx) {\r\n        return this.playerSpriteVec[idx];    \r\n    },\r\n    \r\n    getPlayerSpriteByPlayer: function(idx) {\r\n        for(var playerSprite of this.playerSpriteVec)\r\n        {\r\n            if(playerSprite.getIdx() === idx)\r\n                return playerSprite;\r\n        }\r\n        \r\n        return null;    \r\n    },\r\n    \r\n    refreshPlayerSprite: function(playerIdx) {\r\n        for(var playerSprite of this.playerSpriteVec)    \r\n        {\r\n            if(playerSprite.getIdx() === playerIdx)\r\n            {\r\n                playerSprite.refresh();\r\n                break;\r\n            }\r\n        }\r\n    },\r\n    \r\n    //召唤随从\r\n    summonMonster: function(cardIdx) {\r\n        GameConn.sendPacket(CW_MONSTER_SUMMON_REQUEST, cardIdx); \r\n    },\r\n \r\n    //随从攻击玩家\r\n    monsterAtkPlayer: function(monsterIdx, playerIdx) {\r\n        GameConn.sendPacket(CW_MONSTER_ATTACKPLAYER_REQUEST, {idx: monsterIdx, targetPlayerIdx: playerIdx});\r\n    },\r\n    \r\n    //随从攻击随从\r\n    monsterAtkMonster: function(monsterIdx, playerIdx, targetMonsterIdx) {\r\n        GameConn.sendPacket(CW_MONSTER_ATTACKMONSTER_REQUEST, {idx: monsterIdx, targetPlayerIdx: playerIdx, targetMonsterIdx:targetMonsterIdx});\r\n     },\r\n    \r\n    //回合结束（按钮调用）\r\n    turnEnd_BtnEvent: function(event) {\r\n        //不是MainPhase这个按钮不能按\r\n        if(this.phaseState !== PHASE_MAIN_TURN)\r\n            return;\r\n            \r\n        this.changePhase(PHASE_END_TURN);\r\n    },\r\n    \r\n    addChatItem: function(message, isSystem) {\r\n        this.chatWnd.addChatItem(message, isSystem);\r\n    },\r\n    \r\n    // use this for initialization\r\n    onLoad: function () {\r\n        //this.setInputControl();\r\n        //初始化玩家控件\r\n        for(var playerSprite of this.playerSpriteVec)\r\n        {\r\n            playerSprite.init(this);\r\n        }\r\n    },\r\n\r\n    start: function() {\r\n        //this.startGame();\r\n        GameConn.setDuel(this);\r\n        GameConn.sendPacket(CW_ENTERROOM_REQUEST, {});  //用户进入房间请求\r\n    },\r\n    \r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        //this.turnFunc[this.phaseState]();\r\n    },\r\n});\r\n"
  ]
}