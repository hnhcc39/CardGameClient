{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "//处理对战流程的关键类\r\n\r\nconst Player = require('player');\r\n\r\nvar tempDeck = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','A','B','C','D','E','F','G','H','I','J','K','L'];\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        \r\n        cardPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n\r\n        //自己\r\n        localPlayer: {\r\n            default: null,\r\n            type: Player\r\n        },\r\n        \r\n        //对手\r\n        opponentPlayer: {\r\n            default: null,\r\n            type: Player\r\n        },\r\n\r\n        turn: 0,    //当前双方总回合数\r\n        turnPhase: 0,   //行动状态\r\n        \r\n        //状态相关\r\n        enterTurnFunc: {\r\n            default: []\r\n        },\r\n        \r\n        turnFunc: {\r\n            default: []\r\n        },\r\n        \r\n        leaveTurnFunc: {\r\n            default: []\r\n        },\r\n    },\r\n    \r\n    //开始游戏\r\n    startGame: function() {\r\n        //玩家初始化\r\n        this.localPlayer.init(this);\r\n        this.opponentPlayer.init(this);\r\n        \r\n        //根据牌池生成卡组\r\n        this.localPlayer.createDeck(tempDeck);\r\n        this.opponentPlayer.createDeck(tempDeck);\r\n     \r\n        this.turnPlayer = this.localPlayer;\r\n        this.turnOpponent = this.opponentPlayer;\r\n        \r\n        this.turn = 1;\r\n        \r\n        changePhase(PHASE_BEGIN_TURN);\r\n        \r\n       \r\n    },\r\n  \r\n    //判断输赢\r\n    checkWin: function() {\r\n      \r\n    },\r\n  \r\n    enterBeginTurn: function() {\r\n        this.turnPlayer.criticalPlus(1);        //增加水晶\r\n        this.turnPlayer.criticalRecover();      //回复水晶\r\n        \r\n        this.turnPlayer.drawCard(1);     //抽1张卡\r\n        \r\n    },\r\n    \r\n    beginTurn: function(){\r\n        //进入主流程\r\n        changePhase(PHASE_MAIN_TURN);\r\n    },\r\n    \r\n    leaveBeginTurn: function() {\r\n        \r\n    },\r\n    \r\n    enterMainTurn: function() {\r\n        \r\n    },\r\n    \r\n    mainTurn: function(){\r\n        \r\n    },\r\n    \r\n    leavemainTurn: function() {\r\n        \r\n    },\r\n    \r\n    enterEndTurn: function() {\r\n        \r\n    },\r\n    \r\n    endTurn: function(){\r\n        \r\n    },\r\n    \r\n    leaveEndTurn: function() {\r\n        \r\n    },\r\n        \r\n    changePhase: function(nextTurnType) {\r\n        if(this.turnPhase !== 0)\r\n        {\r\n            this.leaveTurnFunc[this.turnPhase]();\r\n        }\r\n        \r\n        this.enterTurnFunc[this.tuanPhase]();\r\n    },\r\n    \r\n    // use this for initialization\r\n    onLoad: function () {\r\n        //\r\n        this.enterTurnFunc[PHASE_BEGIN_TURN] = this.enterBeginTurn;\r\n        this.enterTurnFunc[PHASE_MAIN_TURN] = this.enterMainTurn;\r\n        this.enterTurnFunc[PHASE_END_TURN] = this.enterEndTurn;\r\n\r\n        this.turnFunc[PHASE_BEGIN_TURN] = this.beginTurn;\r\n        this.turnFunc[PHASE_MAIN_TURN] = this.mainTurn;\r\n        this.turnFunc[PHASE_END_TURN] = this.endTurn;\r\n        \r\n        this.leaveTurnFunc[PHASE_BEGIN_TURN] = this.leaveBeginTurn;\r\n        this.leaveTurnFunc[PHASE_MAIN_TURN] = this.leaveMainTurn;\r\n        this.leaveTurnFunc[PHASE_END_TURN] = this.leaveEndTurn;\r\n    },\r\n\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        //this.turnFunc[this.turnPhase]();\r\n    },\r\n});\r\n"
  ]
}