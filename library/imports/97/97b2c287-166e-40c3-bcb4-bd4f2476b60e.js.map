{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "var MONSTER_UPDATE_CARDNAME = 1<<1;\r\nvar MONSTER_UPDATE_CRITICAL = 1<<2;\r\nvar MONSTER_UPDATE_ATK = 1<<3;\r\nvar MONSTER_UPDATE_HP = 1<<4;\r\nvar MONSTER_UPDATE_MAXHP = 1<<5;\r\nvar MONSTER_UPDATE_ISATKED = 1<<6;\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        _player: null,  //Player引用\r\n        _idx: 0,        //数组索引\r\n  \r\n        \r\n        cardName: \"\",\r\n        critical:0,\r\n        atk:0,\r\n        hp:0,\r\n        maxHp: 0,\r\n        isAtked: true,     //本回合是否攻击过\r\n    },\r\n    \r\n    //打包数据完整\r\n    packDataAll: function(data) {\r\n        data.idx = this.idx;\r\n        \r\n        data.cardName = this.cardName;\r\n        data.critical = this.critical;\r\n        data.atk = this.atk;\r\n        data.hp = this.hp;\r\n        data.maxHp = this.maxHp;\r\n        data.isAtked = this.isAtked;\r\n    },\r\n    \r\n    //解开数据完整\r\n    unPackDataAll: function(data) {\r\n        this.idx = data.idx;\r\n        \r\n        this.cardName = data.cardName;\r\n        this.critical = data.critical;\r\n        this.atk = data.atk;\r\n        this.hp = data.hp;\r\n        this.maxHp = data.maxHp;\r\n        this.isAtked = data.isAtked;\r\n    },\r\n    \r\n    //打包数据\r\n    packData: function(data, flag) {\r\n        data.flag = flag;\r\n        data.idx = this.idx;\r\n    \r\n        if(flag & MONSTER_UPDATE_CARDNAME)\r\n            data.cardName = this.cardName;\r\n        if(flag & MONSTER_UPDATE_CRITICAL)\r\n            data.critical = this.critical;\r\n        if(flag & MONSTER_UPDATE_ATK)\r\n            data.atk = this.atk;\r\n        if(flag & MONSTER_UPDATE_HP)\r\n            data.hp = this.hp;    \r\n        if(flag & MONSTER_UPDATE_MAXHP)\r\n            data.maxHp = this.maxHp;\r\n        if(flag & MONSTER_UPDATE_ISATKED)\r\n            data.isAtked = this.isAtked;\r\n    },\r\n    \r\n    \r\n    //解开数据\r\n    unPackData: function(data) {\r\n        var flag = data.flag;\r\n        this.idx = data.idx;\r\n    \r\n        if(flag & MONSTER_UPDATE_CARDNAME)\r\n            this.cardName = data.cardName;\r\n        if(flag & MONSTER_UPDATE_CRITICAL)\r\n            this.critical = data.critical;\r\n        if(flag & MONSTER_UPDATE_ATK)\r\n            this.atk = data.atk;\r\n        if(flag & MONSTER_UPDATE_HP)\r\n            this.hp = data.hp;    \r\n        if(flag & MONSTER_UPDATE_MAXHP)\r\n            this.maxHp = data.maxHp;\r\n        if(flag & MONSTER_UPDATE_ISATKED)\r\n            this.isAtked = data.isAtked;\r\n    },\r\n\r\n    //扣除HP\r\n    reduceHp: function(num) {\r\n        if(num <= 0)\r\n            return;\r\n        \r\n        this.hp -= num;\r\n        //死了就杀掉这个随从\r\n        if(this.isDead())\r\n            this._player.killMonster(this);\r\n        \r\n        this._player.refreshMonsterSprite();\r\n    },\r\n    \r\n    //回复HP\r\n    addHp: function(num) {\r\n        if(num <= 0)\r\n            return;\r\n            \r\n        this.hp+= num;\r\n        if(this.hp > this.maxHp)\r\n            this.hp = this.maxHp;\r\n        \r\n        this._player.refreshMonsterSprite();\r\n    },\r\n    \r\n    isDead: function() {\r\n        if(this.hp <= 0)\r\n            return true;\r\n    },\r\n    \r\n    // use this for initialization\r\n    onLoad: function () {\r\n    },\r\n    \r\n    init: function(card, player, idx){\r\n        this.cardName = card.cardName;\r\n        this.critical = card.critical;\r\n        this.atk = card.atk;\r\n        this.hp = card.hp;\r\n        this.maxHp = card.hp;\r\n        \r\n        this._player = player;\r\n        this._idx = idx;        \r\n    },\r\n\r\n    //更新编号\r\n    refreshIdx: function(idx) {\r\n        this._idx = idx;\r\n    },\r\n    \r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}