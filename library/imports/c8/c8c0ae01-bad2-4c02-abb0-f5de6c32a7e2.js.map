{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "const Card = require('card');\r\nconst Monster = require('monster');\r\nconst CardDataManager = require('./data/CardDataManager');\r\n\r\nvar PLAYER_UPDATE_ISTURNACTIVE = 1;\r\nvar PLAYER_UPDATE_HP       = 1<<1;\r\nvar PLAYER_UPDATE_CRITICAL = 1<<2;\r\nvar PLAYER_UPDATE_MAXCRITICAL = 1<<3;\r\nvar PLAYER_UPDATE_ISREADY = 1<<4;\r\nvar PLAYER_UPDATE_DECKNUM = 1<<5;\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        \r\n        duel: null, //战斗管理\r\n        idx: -1,\r\n        teamColor: -1,\r\n        isTurnActive: false,    //是否可以行动\r\n        isReady: false, //是否准备游戏\r\n        \r\n        heroName: '',   //玩家名字\r\n        hp: 30,         //英雄生命值\r\n        critical: 0,    //英雄当前水晶数\r\n        maxCritical: 0, //英雄当前回合最大水晶数\r\n        deckNum: 30,    //牌组剩余卡牌\r\n        deckArray: [],  //卡组数组（Card类型）\r\n        handArray: [],  //手牌数组（Card类型）\r\n        fieldArray: [], //场上随从数组（Monster类型）\r\n    },\r\n    \r\n    init: function(duel) {\r\n        this.duel = duel;\r\n    },\r\n    \r\n    //打包数据完整\r\n    packDataAll: function(data) {\r\n        data.idx = this.idx;\r\n        data.temColor = this.teamColor;\r\n        data.isTurnActive = this.isTurnActive;\r\n        data.isReady = this.isReady;\r\n        data.heroName = this.heroName;\r\n        data.hp = this.hp;\r\n        data.critical = this.crititcal;\r\n        data.maxCritical = this.maxCritical;\r\n        data.deckNum = this.deckNum;\r\n    },\r\n    \r\n    //解开数据完整\r\n    unPackDataAll: function(data) {\r\n        this.idx = data.idx;\r\n        this.teamColor = data.temColor;\r\n        this.isTurnActive = data.isTurnActive;\r\n        this.isReady = data.isReady;\r\n        this.heroName = data.heroName;\r\n        this.hp = data.hp;\r\n        this.crititcal = data.critical;\r\n        this.maxCritical = data.maxCritical;\r\n        this.deckNum = data.deckNum;\r\n    },\r\n    \r\n    //打包数据\r\n    packData: function(data, flag) {\r\n        data.flag = flag;\r\n        data.idx = this.idx;\r\n       \r\n        if(flag & PLAYER_UPDATE_ISTURNACTIVE)\r\n            data.isTurnActive = this._isTurnActive;\r\n        if(flag & PLAYER_UPDATE_HP)\r\n            data.hp = this.hp;\r\n        if(flag & PLAYER_UPDATE_CRITICAL)\r\n            data.critical = this.critical;\r\n        if(flag & PLAYER_UPDATE_MAXCRITICAL)\r\n            data.maxCritical = this.maxCritical;\r\n        if(flag & PLAYER_UPDATE_ISREADY)\r\n            data.isReady = this.isReady;\r\n        if(flag & PLAYER_UPDATE_DECKNUM)\r\n            data.deckNum = this.deckNum;\r\n    },\r\n    \r\n    //解开数据\r\n    unPackData: function(data) {\r\n        var flag = data.flag;\r\n        \r\n        if(flag & PLAYER_UPDATE_ISTURNACTIVE)\r\n            this._isTurnActive = data.isTurnActive;\r\n        if(flag & PLAYER_UPDATE_HP)\r\n            this.hp = data.hp;\r\n        if(flag & PLAYER_UPDATE_CRITICAL)\r\n            this.critical = data.critical;\r\n        if(flag & PLAYER_UPDATE_ISREADY)\r\n            this.isReady = data.isReady;\r\n        if(flag & PLAYER_UPDATE_DECKNUM)\r\n            this.deckNum= data.deckNum;\r\n    },\r\n    \r\n    getIsTurnActive: function() { return this.isTurnActive; },\r\n    getHeroName: function() { return this.heroName; },\r\n    getHp: function() { return this.hp; },\r\n    getCritical: function() { return this.critical; },\r\n    getMaxCritical: function() { return this.maxCritical; },\r\n    getDeckNum: function() { return this.deckNum; },\r\n    \r\n    //创建手牌\r\n    createCardToHand: function(data) {\r\n        var card = new Card();\r\n        card.unPackDataAll(data);\r\n        this.handArray.push(card);\r\n        \r\n        var playerSprite = this.duel.getPlayerSpriteByPlayer(this.idx);\r\n        playerSprite.createCardsprite(card);\r\n    },\r\n    \r\n    //删除手牌\r\n    handCardDelete: function(idx) {\r\n        this.handArray.splice(idx, 1);\r\n        \r\n        var playerSprite = this.duel.getPlayerSpriteByPlayer(this.idx);\r\n        playerSprite.deleteCardSprite(idx);\r\n    },\r\n    \r\n    //刷新手牌\r\n    handCardUpdate: function(data) {\r\n        var card = this.handArray[data.idx];\r\n        card.unPackData(data);\r\n        \r\n        var playerSprite = this.duel.getPlayerSpriteByPlayer(this.idx);\r\n        playerSprite.refreshHandCard();\r\n    },\r\n    \r\n    //重置随从攻击次数\r\n    awakenMonster:function() {\r\n        var fieldArray = this.fieldArray;\r\n        \r\n        for(var i=0; i<fieldArray.length; ++i)\r\n        {\r\n            fieldArray[i].isAtked = false;\r\n        }\r\n        \r\n        this.refreshMonsterField();\r\n    },\r\n    \r\n    //召唤随从请求\r\n    summerMonster: function(cardIdx) {\r\n        this.duel.summerMonster(cardIdx);\r\n    },\r\n    \r\n    //创建随从\r\n    createMonster: function(data) {\r\n        var monster = new Monster();\r\n        monster.unPackDataAll(data);\r\n        this.fieldArray.push(monster);\r\n        \r\n        var playerSprite = this.duel.getPlayerSpriteByPlayer(this.idx);\r\n        playerSprite.createMonstersprite(monster);\r\n    },\r\n    \r\n    //删除随从\r\n    monsterDelete: function(idx) {\r\n        this.fieldArray.splice(idx, 1);\r\n        \r\n        var playerSprite = this.duel.getPlayerSpriteByPlayer(this.idx);\r\n        playerSprite.deleteMonsterSprite(idx);\r\n    },\r\n    \r\n    //刷新随从\r\n    handCardUpdate: function(data) {\r\n        var monster = this.fieldArray[data.idx];\r\n        monster.unPackData(data);\r\n        \r\n        var playerSprite = this.duel.getPlayerSpriteByPlayer(this.idx);\r\n        playerSprite.refreshMonsterField();\r\n    },\r\n      \r\n    //干掉随从\r\n    killMonster: function(monster) {\r\n        cc.log('monsterSpriteArray:%s', this.monsterSpriteArray.length)\r\n        cc.log('fieldArray:%s', this.monsterSpriteArray.length)\r\n        cc.log('_idx:%s', monster._idx)\r\n        var idx = monster._idx;\r\n        var monsterSprite = this.monsterSpriteArray[idx];\r\n        \r\n        this.monsterPool.put(monsterSprite);\r\n        this.fieldArray.splice(idx,1);\r\n        this.refreshArrayIdx(this.fieldArray);\r\n        this.monsterSpriteArray.splice(idx,1);\r\n        cc.log('monsterSpriteArray:%s', this.monsterSpriteArray.length)\r\n        cc.log('fieldArray:%s', this.fieldArray.length)\r\n        this.refreshMonsterField();\r\n    },\r\n    \r\n    //数组变动后需要刷新idx\r\n    refreshArrayIdx: function(array) {\r\n        for(var i=0; i<array.length; ++i)\r\n        {\r\n            array[i].refreshIdx(i);\r\n        }\r\n    },\r\n    \r\n    //获取手牌\r\n    getHandCard: function(idx) { return this.handArray[idx]; },\r\n    \r\n    \r\n    \r\n    // use this for initialization\r\n    onLoad: function () {\r\n\r\n    },\r\n    \r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}