{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "const Card = require('card');\r\nconst Monster = require('monster');\r\nconst CardDataManager = require('./data/CardDataManager');\r\n\r\nvar PLAYER_UPDATE_ISTURNACTIVE = 1;\r\nvar PLAYER_UPDATE_HP       = 1<<1;\r\nvar PLAYER_UPDATE_CRITICAL = 1<<2;\r\nvar PLAYER_UPDATE_MAXCRITICAL = 1<<3;\r\nvar PLAYER_UPDATE_ISREADY = 1<<4;\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        \r\n        cardPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        \r\n        monsterPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        \r\n        duel: null, //战斗管理\r\n        idx: -1,\r\n        teamColor: -1,\r\n        isTurnActive: false,    //是否可以行动\r\n        isReady: false, //是否准备游戏\r\n        \r\n        heroName: '',   //玩家名字\r\n        hp: 30,         //英雄生命值\r\n        critical: 0,    //英雄当前水晶数\r\n        maxCritical: 0, //英雄当前回合最大水晶数\r\n\r\n        deckArray: [],  //卡组数组（Card类型）\r\n        handArray: [],  //手牌数组（Card类型）\r\n        fieldArray: [], //场上随从数组（Monster类型）\r\n    },\r\n    \r\n    init: function(duel) {\r\n        this.duel = duel;\r\n    },\r\n    \r\n    //打包数据完整\r\n    packDataAll: function(data) {\r\n        data.idx = this.idx;\r\n        data.temColor = this.teamColor;\r\n        data.isTurnActive = this.isTurnActive;\r\n        data.isReady = this.isReady;\r\n        data.heroName = this.heroName;\r\n        data.hp = this.hp;\r\n        data.critical = this.crititcal;\r\n        data.maxCritical = this.maxCritical;\r\n    },\r\n    \r\n    //解开数据完整\r\n    unPackDataAll: function(data) {\r\n        this.idx = data.idx;\r\n        this.teamColor = data.temColor;\r\n        this.isTurnActive = data.isTurnActive;\r\n        this.isReady = data.isReady;\r\n        this.heroName = data.heroName;\r\n        this.hp = data.hp;\r\n        this.crititcal = data.critical;\r\n        this.maxCritical = data.maxCritical;\r\n    },\r\n    \r\n    //打包数据\r\n    packData: function(data, flag) {\r\n        data.flag = flag;\r\n        data.idx = this.idx;\r\n       \r\n        if(flag & PLAYER_UPDATE_ISTURNACTIVE)\r\n            data.isTurnActive = this._isTurnActive;\r\n        if(flag & PLAYER_UPDATE_HP)\r\n            data.hp = this.hp;\r\n        if(flag & PLAYER_UPDATE_CRITICAL)\r\n            data.critical = this.critical;\r\n        if(flag & PLAYER_UPDATE_MAXCRITICAL)\r\n            data.maxCritical = this.maxCritical;\r\n        if(flag & PLAYER_UPDATE_ISREADY)\r\n            data.isReady = this.isReady;\r\n    },\r\n    \r\n    //解开数据\r\n    unPackData: function(data) {\r\n        var flag = data.flag;\r\n        \r\n        if(flag & PLAYER_UPDATE_ISTURNACTIVE)\r\n            this._isTurnActive = data.isTurnActive;\r\n        if(flag & PLAYER_UPDATE_HP)\r\n            this.hp = data.hp;\r\n        if(flag & PLAYER_UPDATE_CRITICAL)\r\n            this.critical = data.critical;\r\n        if(flag & PLAYER_UPDATE_ISREADY)\r\n            this.isReady = data.isReady;\r\n    },\r\n    \r\n    //根据牌池随机创建卡组\r\n    createDeck: function(cardArray) {\r\n        var deckArray = this.deckArray;\r\n        \r\n        for(var i=0; i<30; ++i)\r\n        {\r\n            deckArray[i] = new Card();\r\n            var randomKey = cardArray[Math.floor(Math.random()*cardArray.length)];\r\n            var cardData = CardDataManager.cardMap[randomKey];\r\n            deckArray[i].init(cardData, this, i);\r\n        }\r\n    },\r\n    \r\n    //设置是否可以行动\r\n    setTurnActive: function(val) {\r\n        this._isTurnActive = val;\r\n    },\r\n    \r\n    //水晶回复\r\n    criticalRecover() {\r\n        this.critical = this.maxCritical;\r\n        this.refreshcriticalsprite();   //刷新水晶图片\r\n    },\r\n    \r\n    //水晶增加\r\n    criticalPlus: function(num) {\r\n        this.maxCritical += num;\r\n        this.critical += num;\r\n        if(this.maxCritical > 10)\r\n            this.maxCritical = 10;\r\n        if(this.critical > 10)\r\n            this.critical = 10;\r\n        this.refreshcriticalsprite();   //刷新水晶图片\r\n    },\r\n    \r\n    //重置随从攻击次数\r\n    awakenMonster:function() {\r\n        var fieldArray = this.fieldArray;\r\n        \r\n        for(var i=0; i<fieldArray.length; ++i)\r\n        {\r\n            fieldArray[i].isAtked = false;\r\n        }\r\n        \r\n        this.refreshMonsterField();\r\n    },\r\n    \r\n    //扣除HP\r\n    reduceHp: function(num) {\r\n        if(num <= 0)\r\n            return;\r\n        \r\n        this.hp -= num;\r\n        this.refreshHpLabel();\r\n    },\r\n    \r\n    //回复HP\r\n    addHp: function(num) {\r\n        if(num <= 0)\r\n            return;\r\n            \r\n        this.hp+= num;\r\n        if(this.hp > 30)\r\n            this.hp = 30;\r\n        \r\n        this.refreshHpLabel();\r\n    },\r\n    \r\n    //创建手牌\r\n    createCardToHand: function(card) {\r\n        //超过10张就爆炸\r\n        if(this.handArray.length >= 10)\r\n        {\r\n            showTipLabel(\"手牌超出10张，抽的牌直接摧毁\");\r\n            return;\r\n        }\r\n            \r\n        //改变序号，加入手牌数组\r\n        card._idx = this.handArray.length;\r\n        this.handArray.push(card);\r\n        \r\n        var cardSprite;\r\n        if(this.cardPool.size() > 0)\r\n        {\r\n            cardSprite = this.cardPool.get(this);\r\n        }\r\n        else\r\n        {\r\n            cardSprite = cc.instantiate(this.cardPrefab);\r\n        }\r\n        \r\n        this.handFiledLayout.node.addChild(cardSprite);\r\n        this.handCardSpriteArray.push(cardSprite);\r\n        this.refreshHandCard(); //刷新手牌图片\r\n    },\r\n  \r\n    //抽牌\r\n    drawDeck: function(num) {\r\n        var deckArray = this.deckArray;\r\n        \r\n        if(deckArray.length > 0)\r\n        {\r\n            var card = deckArray.pop();\r\n            this.deckLabel.string = deckArray.length.toString();\r\n            this.createCardToHand(card);\r\n        }\r\n        else\r\n        {\r\n            this.reduceHp(1);\r\n            showTipLabel(this.heroName + \" 的牌库没牌了，抽1张少1HP\");\r\n        }\r\n        \r\n        if(num<=1)\r\n        {\r\n            this.duel.checkWin();\r\n        }\r\n        else\r\n        {\r\n            this.drawDeck(num-1);\r\n        }\r\n    },\r\n    \r\n    //召唤随从\r\n    summerMonster: function(cardSprite) {\r\n        //如果随从已满返回\r\n        if(this.fieldArray.length > 7)\r\n            return false;\r\n            \r\n        var idx = cardSprite._idx;\r\n        var card = this.handArray[idx]; //获取卡牌对象\r\n        if(card)\r\n        {\r\n            var critical = card.critical;\r\n            //如果水晶不够返回\r\n            if(critical > this.critical)\r\n            {\r\n                showTipLabel(this.heroName + \" 只有 \" + this.critical + ' 个水晶,不能召唤费用为' + critical + ' 的 ' + card.cardName + ' 到场上');\r\n                return false;\r\n            }\r\n        \r\n            this.critical -= critical;\r\n            this.refreshcriticalsprite();\r\n            \r\n            //创建随从对象并加入随从数组\r\n            var monster = new Monster();\r\n            monster.init(card, this, this.fieldArray.length);\r\n            this.fieldArray.push(monster);\r\n            \r\n            //创建随从图片资源\r\n            var monsterSprite;\r\n            if(this.monsterPool.size() > 0)\r\n            {\r\n                monsterSprite = this.monsterPool.get(this);\r\n            }\r\n            else\r\n            {\r\n                monsterSprite = cc.instantiate(this.monsterPrefab);\r\n            }\r\n\r\n            this.monsterFieldLayout.addChild(monsterSprite);\r\n            this.monsterSpriteArray.push(monsterSprite);\r\n            this.refreshMonsterField(); //刷新随从区\r\n            //删除手牌\r\n            this.cardPool.put(cardSprite.node);\r\n            this.handArray.splice(idx,1);\r\n            this.refreshArrayIdx(this.handArray);\r\n            //cc.log('after summer monster, the handarray.length is %d',this.handArray.length);\r\n            this.handCardSpriteArray.splice(idx,1);\r\n            this.refreshHandCard();\r\n            showTipLabel(this.heroName + \" 从手牌召唤了1张 \" + card.cardName + ' 到场上');\r\n\r\n        }\r\n        else\r\n        {\r\n            return false;            \r\n        }\r\n    },\r\n    \r\n    //干掉随从\r\n    killMonster: function(monster) {\r\n        cc.log('monsterSpriteArray:%s', this.monsterSpriteArray.length)\r\n        cc.log('fieldArray:%s', this.monsterSpriteArray.length)\r\n        cc.log('_idx:%s', monster._idx)\r\n        var idx = monster._idx;\r\n        var monsterSprite = this.monsterSpriteArray[idx];\r\n        \r\n        this.monsterPool.put(monsterSprite);\r\n        this.fieldArray.splice(idx,1);\r\n        this.refreshArrayIdx(this.fieldArray);\r\n        this.monsterSpriteArray.splice(idx,1);\r\n        cc.log('monsterSpriteArray:%s', this.monsterSpriteArray.length)\r\n        cc.log('fieldArray:%s', this.fieldArray.length)\r\n        this.refreshMonsterField();\r\n    },\r\n    \r\n    //数组变动后需要刷新idx\r\n    refreshArrayIdx: function(array) {\r\n        for(var i=0; i<array.length; ++i)\r\n        {\r\n            array[i].refreshIdx(i);\r\n        }\r\n    },\r\n    \r\n    //-----------------------界面刷新---------------------------------------\r\n    //手牌图片刷新\r\n    refreshHandCard: function() {\r\n        var handArray = this.handArray;\r\n        var handCardSpriteArray = this.handCardSpriteArray;\r\n        var arrayLength = handArray.length;\r\n\r\n        for(var i=0; i<arrayLength; ++i)\r\n        {\r\n            if(handCardSpriteArray[i])\r\n            {\r\n                handCardSpriteArray[i].getComponent('CardSprite').init(handArray[i], this, i);\r\n                handCardSpriteArray[i].setPosition(90*i+handCardSpriteArray[i].getChildByName('sprite').width/2-this.handFiledLayout.node.width/2, 0);\r\n                //cc.log(handCardSpriteArray[i].getChildByName('sprite').width);\r\n                //cc.log(this.handFiledLayout.node.width);\r\n                //handCardSpriteArray[i].setPosition(0,0);\r\n                \r\n            }\r\n            else\r\n            {\r\n                cc.log('handCardSpriteArray is less than handArray! %d/%d',i,arrayLength);\r\n                break;\r\n            }\r\n        }\r\n    },\r\n    \r\n    //随从图片刷新\r\n    refreshMonsterField: function() {\r\n        var fieldArray = this.fieldArray;\r\n        var monsterSpriteArray = this.monsterSpriteArray;\r\n        var arrayLength = fieldArray.length;\r\n\r\n        for(var i=0; i<arrayLength; ++i)\r\n        {\r\n            if(monsterSpriteArray[i])\r\n            {\r\n                monsterSpriteArray[i].getComponent('MonsterSprite').init(fieldArray[i], this, i);\r\n                monsterSpriteArray[i].setPosition(110*i+monsterSpriteArray[i].width/2-this.monsterFieldLayout.width/2, 0);\r\n                //cc.log(monsterSpriteArray[i].width);\r\n                //cc.log(this.monsterFieldLayout.node.width);\r\n                //monsterSpriteArray[i].setPosition(0,0);\r\n                if(fieldArray[i].isAtked)\r\n                    monsterSpriteArray[i].opacity = 100;\r\n                else\r\n                    monsterSpriteArray[i].opacity = 255;\r\n            }\r\n            else\r\n            {\r\n                cc.log('monsterSpriteArray is less than fieldArray! %d/%d',i,arrayLength);\r\n                break;\r\n            }\r\n        }\r\n    },\r\n    \r\n    // use this for initialization\r\n    onLoad: function () {\r\n\r\n    },\r\n    \r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}