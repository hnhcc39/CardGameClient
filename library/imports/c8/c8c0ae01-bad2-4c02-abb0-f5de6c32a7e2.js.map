{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "const Card = require('card');\r\nconst CardDataManager = require('./data/CardDataManager')\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        \r\n        cardPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        \r\n        duel: null, //战斗管理\r\n        hp: 30, //英雄生命值\r\n        critical: 0,    //英雄当前水晶数\r\n        maxCritical: 0, //英雄当前回合最大水晶数\r\n        //handCard: 0,    \r\n        deckArray: [],  //卡组数组（Card类型）\r\n        handArray: [],  //手牌数组（Card类型）\r\n        fieldArray: [], //场上随从数组（CardMonster类型）\r\n        handCardSpriteArray: [], //手牌图片数组\r\n        \r\n        //-----------------------控件-------------------------------------------\r\n        //手牌区\r\n        handFiledLayout: {\r\n            default: null,\r\n            type: cc.Layout\r\n        },\r\n        //头像\r\n        heroIconSprite: {\r\n            default: null,\r\n            type: cc.Sprite\r\n        },\r\n        //血量显示\r\n        heroHpLabel: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n    },\r\n    \r\n    init: function(duel) {\r\n        this.duel = duel;\r\n        this.hp = 30;\r\n        this.critical = 0;\r\n        this.maxCritical = 0;\r\n        this.deckArray = [];\r\n        this.handArray = [];\r\n        this.fieldArray = [];\r\n        for(var i=0; i<this.handCardSpriteArray.length(); ++i)\r\n        {\r\n            //this.handCardSpriteArray[i].removeFrom\r\n        }\r\n        \r\n    },\r\n    \r\n    //根据牌池随机创建卡组\r\n    createDeck: function(cardArray) {\r\n        for(var i=0; i<30; ++i)\r\n        {\r\n            deckArray[i] = new Card();\r\n            var randomKey = cardArray[Math.floor(Math.random()*cardArray.length)];\r\n            var cardData = CardDataManager.cardMap[randomKey];\r\n            deckArray[i].init(cardData);\r\n        }\r\n    },\r\n    \r\n    //水晶回复\r\n    criticalRecover() {\r\n        this.critical = this.maxCritical;\r\n    },\r\n    \r\n    //水晶增加\r\n    criticalPlus: function(num) {\r\n        this.maxCritical += num;\r\n        this.critical += num;\r\n        if(this.maxCritical > 10)\r\n            this.maxCritical = 10;\r\n        if(this.critical > 10)\r\n            this.critical = 10;\r\n    },\r\n    \r\n    //创建卡牌图片\r\n    createCardToHand: function(card) {\r\n        var cardSprite = cc.instanceof(this.cardPrefab);\r\n        this.handFiledLayout.addChild(cardSprite);\r\n        this.handArray.push(card);\r\n        this.handCardSpriteArray.push(cardSprite);\r\n        this.refreshHandCard(); //刷新手牌图片\r\n    },\r\n  \r\n    //抽牌\r\n    drawDeck: function(num) {\r\n        var deckArray = this.deckArray;\r\n        \r\n        if(deckArray.length > 0)\r\n        {\r\n            var card = deckArray.pop();\r\n            createCardToHand(card);\r\n        }\r\n        else\r\n        {\r\n            --this.hp;\r\n            this.heroHpLabel.string = this.hp.toString();\r\n        }\r\n        \r\n        if(num<=1)\r\n        {\r\n            this.duel.checkWin();\r\n        }\r\n        else\r\n        {\r\n            this.drawDeck(num-1);\r\n        }\r\n    },\r\n    \r\n    //-----------------------界面刷新---------------------------------------\r\n    //手牌图片刷新\r\n    refreshHandCard: function() {\r\n        var handArray = this.handArray;\r\n        var handCardSpriteArray = this.handCardSpriteArray;\r\n        var arrayLength = handArray.length();\r\n\r\n        for(var i=0; i<arrayLength; ++i)\r\n        {\r\n            if(handCardSpriteArray[i])\r\n            {\r\n                handCardSpriteArray[i].getComponent('card').init(handArray[i]);\r\n                handCardSpriteArray[i].setPosition(40*i+handCardSpriteArray[i].width/2-this.handFiledLayout.width/2, 0);\r\n            }\r\n            else\r\n            {\r\n                cc.log('handCardSpriteArray is less than handArray! %d/%d',i,arrayLength);\r\n                break;\r\n            }\r\n        }\r\n    },\r\n    \r\n    // use this for initialization\r\n    onLoad: function () {\r\n\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}